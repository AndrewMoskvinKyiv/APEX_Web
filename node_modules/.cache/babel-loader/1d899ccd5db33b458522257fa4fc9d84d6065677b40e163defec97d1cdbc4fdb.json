{"ast":null,"code":"var _jsxFileName = \"C:\\\\Apex\\\\apex__web\\\\src\\\\root.jsx\";\nimport * as React from \"react\";\nimport logo from './assets/logo.png';\nimport NavigationPanel from \"./components/NavigationPanel/NavigationPanel\";\nimport S from \"./root.module.css\";\nimport { SimpleSlider } from \"./components/slickSlider/SimpleSlider\";\nimport Slider from \"react-slick\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Root() {\n  const settings = {\n    dots: false,\n    infinite: true,\n    speed: 500,\n    slidesToShow: 1,\n    slidesToScroll: 1,\n    autoplay: true,\n    autoplaySpeed: 5000,\n    beforeChange: (oldIndex, newIndex) => {\n      console.log(newIndex);\n      console.log(oldIndex);\n    }\n  };\n  let elem = document.getElementById(\"myvideo\");\n  if (elem.requestFullscreen) {\n    elem.requestFullscreen();\n  } else if (elem.mozRequestFullScreen) {\n    elem.mozRequestFullScreen();\n  } else if (elem.webkitRequestFullscreen) {\n    elem.webkitRequestFullscreen();\n  }\n  const windowOuterWidth = window.innerWidth;\n  const windowInnerHeight = window.innerHeight;\n  console.log(windowInnerHeight);\n  return (\n    /*#__PURE__*/\n    // <div className={S.root}>\n    _jsxDEV(\"video\", {\n      controls: true,\n      id: \"myvideo\",\n      children: [/*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"https://apextest12.b-cdn.net/vid1.mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"source\", {\n        src: \"https://apextest12.b-cdn.net/vid1.mp4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)\n  );\n  // <Slider {...settings}>\n  //\n  //     <div>\n  //         <video autoPlay muted loop className={S.myVideo}\n  //                style={{width:`${windowOuterWidth}px`}}>\n  //             <source src=\"https://apextest12.b-cdn.net/vid1.mp4\" type=\"video/mp4\"/>\n  //         </video>\n  //     </div>\n  //     <div>\n  //         <video autoPlay muted loop className={S.myVideo}\n  //                style={{width:`${windowOuterWidth}px`}}>\n  //             <source src=\"https://apextest12.b-cdn.net/vid2.mp4\" type=\"video/mp4\"/>\n  //         </video>\n  //     </div>\n  //     <div>\n  //         <video autoPlay muted loop className={S.myVideo}\n  //                style={{width:`${windowOuterWidth}px`}}>\n  //             <source src=\"https://apextest12.b-cdn.net/vid3.mp4\" type=\"video/mp4\"/>\n  //         </video>\n  //     </div>\n  // </Slider>)\n  {/*<section className={S.header}>*/}\n  {/*    <picture>*/}\n  {/*        <img src={logo} alt='ApexLogo'/>*/}\n  {/*    </picture>*/}\n  {/*<NavigationPanel/>*/}\n  {/*</section>*/}\n  {/*<video autoPlay muted loop className={S.myVideo} >*/}\n  {/*    <source src=\"https://apextest12.b-cdn.net/vid1.mp4\" type=\"video/mp4\"/>*/}\n  {/*</video>*/}\n  {/*<SimpleSlider/>*/}\n  // </div>\n}\n_c = Root;\nvar _c;\n$RefreshReg$(_c, \"Root\");","map":{"version":3,"names":["React","logo","NavigationPanel","S","SimpleSlider","Slider","Root","settings","dots","infinite","speed","slidesToShow","slidesToScroll","autoplay","autoplaySpeed","beforeChange","oldIndex","newIndex","console","log","elem","document","getElementById","requestFullscreen","mozRequestFullScreen","webkitRequestFullscreen","windowOuterWidth","window","innerWidth","windowInnerHeight","innerHeight"],"sources":["C:/Apex/apex__web/src/root.jsx"],"sourcesContent":["import * as React from \"react\";\r\nimport logo from './assets/logo.png'\r\nimport NavigationPanel from \"./components/NavigationPanel/NavigationPanel\";\r\nimport S from \"./root.module.css\"\r\nimport {SimpleSlider} from \"./components/slickSlider/SimpleSlider\";\r\nimport Slider from \"react-slick\";\r\n\r\nexport default function Root() {\r\n    const settings = {\r\n        dots: false,\r\n        infinite: true,\r\n        speed: 500,\r\n        slidesToShow: 1,\r\n        slidesToScroll: 1,\r\n        autoplay: true,\r\n        autoplaySpeed:5000,\r\n        beforeChange: (oldIndex, newIndex) => {\r\n            console.log(newIndex);\r\n            console.log(oldIndex);\r\n        },\r\n\r\n    };\r\n    let elem = document.getElementById(\"myvideo\");\r\n    if (elem.requestFullscreen) {\r\n        elem.requestFullscreen();\r\n    } else if (elem.mozRequestFullScreen) {\r\n        elem.mozRequestFullScreen();\r\n    } else if (elem.webkitRequestFullscreen) {\r\n        elem.webkitRequestFullscreen();\r\n    }\r\n    const windowOuterWidth = window.innerWidth\r\n    const windowInnerHeight = window.innerHeight\r\n    console.log(windowInnerHeight)\r\n    return (\r\n        // <div className={S.root}>\r\n        <video controls id=\"myvideo\">\r\n            <source src=\"https://apextest12.b-cdn.net/vid1.mp4\"></source>\r\n            <source src=\"https://apextest12.b-cdn.net/vid1.mp4\"></source>\r\n        </video>)\r\n            // <Slider {...settings}>\r\n            //\r\n            //     <div>\r\n            //         <video autoPlay muted loop className={S.myVideo}\r\n            //                style={{width:`${windowOuterWidth}px`}}>\r\n            //             <source src=\"https://apextest12.b-cdn.net/vid1.mp4\" type=\"video/mp4\"/>\r\n            //         </video>\r\n            //     </div>\r\n            //     <div>\r\n            //         <video autoPlay muted loop className={S.myVideo}\r\n            //                style={{width:`${windowOuterWidth}px`}}>\r\n            //             <source src=\"https://apextest12.b-cdn.net/vid2.mp4\" type=\"video/mp4\"/>\r\n            //         </video>\r\n            //     </div>\r\n            //     <div>\r\n            //         <video autoPlay muted loop className={S.myVideo}\r\n            //                style={{width:`${windowOuterWidth}px`}}>\r\n            //             <source src=\"https://apextest12.b-cdn.net/vid3.mp4\" type=\"video/mp4\"/>\r\n            //         </video>\r\n            //     </div>\r\n            // </Slider>)\r\n            {/*<section className={S.header}>*/}\r\n            {/*    <picture>*/}\r\n            {/*        <img src={logo} alt='ApexLogo'/>*/}\r\n            {/*    </picture>*/}\r\n            {/*<NavigationPanel/>*/}\r\n            {/*</section>*/}\r\n            {/*<video autoPlay muted loop className={S.myVideo} >*/}\r\n            {/*    <source src=\"https://apextest12.b-cdn.net/vid1.mp4\" type=\"video/mp4\"/>*/}\r\n            {/*</video>*/}\r\n            {/*<SimpleSlider/>*/}\r\n        // </div>\r\n\r\n\r\n}\r\n"],"mappings":";AAAA,OAAO,KAAKA,KAAK,MAAM,OAAO;AAC9B,OAAOC,IAAI,MAAM,mBAAmB;AACpC,OAAOC,eAAe,MAAM,8CAA8C;AAC1E,OAAOC,CAAC,MAAM,mBAAmB;AACjC,SAAQC,YAAY,QAAO,uCAAuC;AAClE,OAAOC,MAAM,MAAM,aAAa;AAAC;AAEjC,eAAe,SAASC,IAAI,GAAG;EAC3B,MAAMC,QAAQ,GAAG;IACbC,IAAI,EAAE,KAAK;IACXC,QAAQ,EAAE,IAAI;IACdC,KAAK,EAAE,GAAG;IACVC,YAAY,EAAE,CAAC;IACfC,cAAc,EAAE,CAAC;IACjBC,QAAQ,EAAE,IAAI;IACdC,aAAa,EAAC,IAAI;IAClBC,YAAY,EAAE,CAACC,QAAQ,EAAEC,QAAQ,KAAK;MAClCC,OAAO,CAACC,GAAG,CAACF,QAAQ,CAAC;MACrBC,OAAO,CAACC,GAAG,CAACH,QAAQ,CAAC;IACzB;EAEJ,CAAC;EACD,IAAII,IAAI,GAAGC,QAAQ,CAACC,cAAc,CAAC,SAAS,CAAC;EAC7C,IAAIF,IAAI,CAACG,iBAAiB,EAAE;IACxBH,IAAI,CAACG,iBAAiB,EAAE;EAC5B,CAAC,MAAM,IAAIH,IAAI,CAACI,oBAAoB,EAAE;IAClCJ,IAAI,CAACI,oBAAoB,EAAE;EAC/B,CAAC,MAAM,IAAIJ,IAAI,CAACK,uBAAuB,EAAE;IACrCL,IAAI,CAACK,uBAAuB,EAAE;EAClC;EACA,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,UAAU;EAC1C,MAAMC,iBAAiB,GAAGF,MAAM,CAACG,WAAW;EAC5CZ,OAAO,CAACC,GAAG,CAACU,iBAAiB,CAAC;EAC9B;IAAA;IACI;IACA;MAAO,QAAQ;MAAC,EAAE,EAAC,SAAS;MAAA,wBACxB;QAAQ,GAAG,EAAC;MAAuC;QAAA;QAAA;QAAA;MAAA,QAAU,eAC7D;QAAQ,GAAG,EAAC;MAAuC;QAAA;QAAA;QAAA;MAAA,QAAU;IAAA;MAAA;MAAA;MAAA;IAAA;EACzD;EACJ;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACD,CAAC;EACL;AAGR;AAAC,KAlEuBvB,IAAI;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}